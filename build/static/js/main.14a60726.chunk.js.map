{"version":3,"sources":["Components/Persons.js","Components/PersonForm.js","Components/Filter.js","services/phonebook.js","Components/Notification.js","App.js","index.js"],"names":["Person","person","removePerson","name","number","key","id","remove","Button","onClick","Persons","persons","map","PersonForm","props","onSubmit","value","inputNameValue","onChange","inputNameOnChange","inputNumberValue","inputNumberOnChange","type","Filter","inputValue","inputOnChange","baseUrl","axios","get","then","response","data","newObject","post","delete","status","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","useEffect","phoneService","initialPersons","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","personObject","indexOf","window","alert","returnedPerson","concat","setTimeout","find","n","confirm","console","log","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14a60726.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ( {person, removePerson} ) => {\n    return (\n        <div>\n            <li>{person.name} {person.number} <Button key={person.id} remove={removePerson}> </Button></li> \n        </div>\n    )\n}\n\nconst Button = ( {remove} ) => {\n    return (\n        <button onClick={remove}>delete</button>\n    )\n}\n\nconst Persons = ( {persons, removePerson} ) => {\n    return (\n        persons.map(person => <Person key={person.id} person={person} removePerson={() => removePerson(person.id)}/>)\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.onSubmit}>\n            <div>\n                name: <input value={props.inputNameValue} onChange={props.inputNameOnChange} />\n            </div>\n            <div>\n                number: <input value={props.inputNumberValue} onChange={props.inputNumberOnChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n        <div>\n            filter shown with <input value={props.inputValue} onChange={props.inputOnChange} />\n        </div>\n    )\n}\n\nexport default Filter\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.status)\n}\n\nexport default {getAll, create, update, remove}\n","import React from 'react'\nimport './Notification.css'\n\nconst Notification = ({ message }) => {\n    if (message === '') {\n        return null\n    }\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './Components/Persons'\nimport PersonForm from './Components/PersonForm'\nimport Filter from './Components/Filter'\nimport phoneService from './services/phonebook'\nimport Notification from './Components/Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [newFilter, setNewFilter] = useState('')\n    const [message, setMessage] = useState('')\n\n    useEffect(() => {\n        phoneService.getAll().then(initialPersons => {\n            setPersons(initialPersons)\n        })\n        // axios.get('http://localhost:3001/persons')\n        //     .then(response => {\n        //         setPersons(response.data)\n        //     })asa\n    }, [])\n\n    const personsToShow = (newFilter === '')\n        ? persons\n        : persons.filter(person => {\n            const name = person.name.toLowerCase()\n            const filter = newFilter.toLowerCase()\n            return name.includes(filter)\n        })\n\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value)\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const deletePerson = (id) => {\n        // const personsCopy = [...persons];\n        const person = persons.find(n => n.id === id)\n        if (window.confirm(`delete ${person.name}?`)) {\n            phoneService\n                .remove(id)\n                .then(status => {\n                    console.log(status)\n                    setPersons(persons.filter(person => {\n                        if (person.id !== id) {\n                            return person\n                        }\n                        return null\n                    }))\n                })\n                .catch(error => {\n                    alert(\n                        `the person '${person.name}' was already deleted from the server`\n                    )\n                    setPersons(persons.filter(person => {\n                        if (person.id !== id) {\n                            return person\n                        }\n                        return null\n                    }))\n                })\n        }\n    }\n\n    const addName = (event) => {\n        event.preventDefault()\n        const personObject = {\n            name: newName,\n            number: newNumber,\n        }\n        const array = persons.map(person => person.name)\n        if (array.indexOf(personObject.name) !== -1) {\n            window.alert(`${newName} is already added to phonebook`)\n        } else {\n            // setPersons(persons.concat(personObject))\n            phoneService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    setMessage(\n                        `Added ${personObject.name}`\n                    )\n                    setTimeout(() => {\n                        setMessage('')\n                    }, 5000)\n                })\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} />\n            <Filter inputValue={newFilter} inputOnChange={handleFilterChange} />\n            <h2>add a new</h2>\n            <PersonForm\n                onSubmit={addName}\n                inputNameValue={newName}\n                inputNameOnChange={handleNameChange}\n                inputNumberValue={newNumber}\n                inputNumberOnChange={handleNumberChange}\n            />\n            <h2>Numbers</h2>\n            <Persons persons={personsToShow} removePerson={deletePerson} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,\n    document.getElementById('root'));\n"],"sourceRoot":""}